generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Post {
  title        String
  shortText    String
  fullText     String
  authorName   String
  phone        String?
  whatsapp     String?
  image        String?
  deadline     DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  categorySlug String
  complexSlug  String
  id           Int       @id @unique @default(autoincrement())
  comments     Comment[]
  category     Category  @relation(fields: [categorySlug], references: [slug], onDelete: Cascade)
  complex      Complex   @relation(fields: [complexSlug], references: [slug], onDelete: Cascade)

  @@index([categorySlug])
  @@index([complexSlug])
}

model Category {
  id    String @id @default(cuid())
  slug  String @unique
  name  String
  posts Post[]
}

model Complex {
  id                  String             @id @default(cuid())
  name                String
  slug                String             @unique
  address             String?
  metro               String?
  description         String?
  timeToMetro         Int?
  managementCompanyId String?
  email               String?
  phone               String?
  managementCompany   ManagementCompany? @relation(fields: [managementCompanyId], references: [id])
  posts               Post[]
  usefulPhones        UsefulPhone[]

  @@index([name])
  @@index([address])
}

model Comment {
  id        String   @id @default(cuid())
  author    String
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@index([postId])
}

model ManagementCompany {
  id      String    @id @default(cuid())
  name    String    @unique
  slug    String    @unique
  phone   String?
  email   String?
  Complex Complex[]
}

model UsefulPhone {
  id        String  @id @default(cuid())
  name      String
  number    String
  complexId String
  complex   Complex @relation(fields: [complexId], references: [id], onDelete: Cascade)
}
